apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres  # ✅ Good! Matches template labels
  template:
    metadata:
      labels:
        app: postgres  # ✅ Good! Consistent labeling
    spec:
      containers:
      - name: postgres
        image: postgres:14  # ✅ Fine! You could specify alpine (smaller image): postgres:14-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret   # ✅ Great! You’re using Secrets for security!
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          value: trojaidb  # ✅ Make sure your backend DATABASE_URL points to this db name
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data  # ✅ Required for data persistence
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc  # ✅ Should be created separately
---
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP  # ✅ Perfect for internal use by backend
